# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will initiate a Contrast Scan on your built artifact, and subsequently upload the results SARIF to Github.
# Because Contrast Scan is designed to run against your deployable artifact, you need to build an artifact that will be passed to the Contrast Scan Action.
# Contrast Scan currently supports Java, JavaScript and .NET artifacts.
# For more information about the Contrast Scan GitHub Action see here: https://github.com/Contrast-Security-OSS/contrastscan-action

# Pre-requisites:
# All Contrast related account secrets should be configured as GitHub secrets to be passed as inputs to the Contrast Scan Action.
# The required secrets are CONTRAST_API_KEY, CONTRAST_ORGANIZATION_ID and CONTRAST_AUTH_HEADER.

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

permissions:
  contents: read

name: Scan analyze workflow
jobs:
  build-and-scan:
    permissions:
        contents: read # for actions/checkout
        security-events: write # for github/codeql-action/upload-sarif
        actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    # check out project
    steps:
    - uses: actions/checkout@v3
    # Since Contrast Scan is designed to run against your deployable artifact, the steps to build your artifact should go here.
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Maven Build
      run: mvn --batch-mode package
    - name: Environment Check
      run: find . -print
      
    # Scan Artifact
    - name: Contrast Scan Action
      uses: Contrast-Security-OSS/contrastscan-action@v2.0.3
      with:
        artifact: target/testaverde-1.0.jar
        #projectId: '4b7a1ad8-a8c1-481d-b695-5674255898ba'
        projectName: "testaverde"
        apiKey: ${{ secrets.CONTRAST_GITHUB_APP_API_KEY }}
        orgId: ${{ vars.CONTRAST_GITHUB_APP_ORG_ID }}
        authHeader: ${{ secrets.CONTRAST_AUTH_HEADER }}
        ##authHeader: 'c2NvdHQubWNiYWluQGNvbnRyYXN0c2VjdXJpdHkuY29tOlA2TDlQMDgyOEwyMjQzVVI='
        #authHeader: ${{ secrets.CONTRAST_GITHUB_APP_AUTH_HEADER }}
        apiUrl: ${{ vars.CONTRAST_GITHUB_APP_TS_URL }}
    #Upload the results to GitHub
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: results.sarif # The file name must be 'results.sarif', as this is what the Github Action will output
